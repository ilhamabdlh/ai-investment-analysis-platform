# Generated by Django 5.2.6 on 2025-09-30 01:10

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0002_competitiveanalysis_highlevelanalysis_and_more'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.DeleteModel(
            name='CompetitiveAnalysis',
        ),
        migrations.DeleteModel(
            name='HighLevelAnalysis',
        ),
        migrations.DeleteModel(
            name='KeyIndividualsAnalysis',
        ),
        migrations.DeleteModel(
            name='MarketAnalysis',
        ),
        migrations.DeleteModel(
            name='PerceptionAnalysis',
        ),
        migrations.RemoveField(
            model_name='metric',
            name='analysis',
        ),
        migrations.AddField(
            model_name='metric',
            name='content_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='metric',
            name='object_id',
            field=models.UUIDField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='metric',
            name='category',
            field=models.CharField(choices=[('financial', 'Financial Health'), ('market', 'Market Position'), ('team', 'Team & Execution'), ('technology', 'Technology & IP'), ('growth', 'Growth Potential'), ('risk', 'Risk Assessment'), ('perception', 'Perception & Sentiment'), ('competitive', 'Competitive Position')], max_length=50),
        ),
        migrations.CreateModel(
            name='CompetitiveAnalysis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('summary', models.TextField()),
                ('overall_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('confidence_score', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('competitive_position', models.CharField(blank=True, help_text='Market position', max_length=100)),
                ('competitive_advantages', models.JSONField(default=list, help_text='Competitive advantages')),
                ('competitive_threats', models.JSONField(default=list, help_text='Competitive threats')),
                ('differentiation_factors', models.JSONField(default=list, help_text='Key differentiation factors')),
                ('competitor_analysis', models.JSONField(default=list, help_text='Detailed competitor analysis')),
                ('analyst', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competitive_analyses', to='api.company')),
            ],
            options={
                'verbose_name': 'Competitive Analysis',
                'verbose_name_plural': 'Competitive Analyses',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HighLevelAnalysis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('summary', models.TextField()),
                ('overall_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('confidence_score', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('key_findings', models.JSONField(default=list, help_text='Key findings from the analysis')),
                ('risk_factors', models.JSONField(default=list, help_text='Identified risk factors')),
                ('opportunities', models.JSONField(default=list, help_text='Investment opportunities')),
                ('recommendations', models.JSONField(default=list, help_text='Investment recommendations')),
                ('analyst', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='high_level_analyses', to='api.company')),
            ],
            options={
                'verbose_name': 'High-Level Analysis',
                'verbose_name_plural': 'High-Level Analyses',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='KeyIndividualsAnalysis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('summary', models.TextField()),
                ('overall_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('confidence_score', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('team_strength_score', models.IntegerField(blank=True, help_text='Overall team strength score', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('leadership_assessment', models.TextField(blank=True, help_text='Leadership team assessment')),
                ('team_risks', models.JSONField(default=list, help_text='Team-related risks')),
                ('team_recommendations', models.JSONField(default=list, help_text='Team-related recommendations')),
                ('analyst', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='key_individuals_analyses', to='api.company')),
            ],
            options={
                'verbose_name': 'Key Individuals Analysis',
                'verbose_name_plural': 'Key Individuals Analyses',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterField(
            model_name='individualrisk',
            name='analysis',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='individual_risks', to='api.keyindividualsanalysis'),
        ),
        migrations.AlterField(
            model_name='keyindividual',
            name='analysis',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='individuals', to='api.keyindividualsanalysis'),
        ),
        migrations.AlterField(
            model_name='publicmention',
            name='analysis',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='public_mentions', to='api.keyindividualsanalysis'),
        ),
        migrations.CreateModel(
            name='MarketAnalysis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('summary', models.TextField()),
                ('overall_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('confidence_score', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('market_size', models.CharField(blank=True, help_text='Total addressable market size', max_length=255)),
                ('market_growth_rate', models.FloatField(blank=True, help_text='Market growth rate percentage', null=True)),
                ('competitive_landscape', models.JSONField(default=list, help_text='Competitive landscape analysis')),
                ('market_trends', models.JSONField(default=list, help_text='Current market trends')),
                ('barriers_to_entry', models.JSONField(default=list, help_text='Barriers to market entry')),
                ('analyst', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='market_analyses', to='api.company')),
            ],
            options={
                'verbose_name': 'Market Analysis',
                'verbose_name_plural': 'Market Analyses',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PerceptionAnalysis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('summary', models.TextField()),
                ('overall_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('confidence_score', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('sentiment_score', models.IntegerField(blank=True, help_text='Overall sentiment score (0-100)', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('media_coverage', models.JSONField(default=list, help_text='Media coverage analysis')),
                ('social_sentiment', models.JSONField(default=dict, help_text='Social media sentiment data')),
                ('brand_perception', models.JSONField(default=list, help_text='Brand perception insights')),
                ('analyst', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='perception_analyses', to='api.company')),
            ],
            options={
                'verbose_name': 'Perception Analysis',
                'verbose_name_plural': 'Perception Analyses',
                'ordering': ['-created_at'],
            },
        ),
        migrations.DeleteModel(
            name='Analysis',
        ),
    ]
